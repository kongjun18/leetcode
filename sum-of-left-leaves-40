/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    void sumOfLeftLeavesImpl(TreeNode *root, TreeNode *parent, int &sum) {
        if (root) {
            if (root->left) {
                sumOfLeftLeavesImpl(root->left, root, sum);
            }
            if (root->right) {
                sumOfLeftLeavesImpl(root->right, root, sum);
            }

            if (!root->left && !root->right) {
                if (parent && parent->left == root) {
                    sum += root->val;
                }
            }
        }
    }
public:
    int sumOfLeftLeaves(TreeNode* root) {
        int sum = 0;
        sumOfLeftLeavesImpl(root, nullptr, sum);
        return sum;
    }
};
